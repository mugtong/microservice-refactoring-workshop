plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'app.anne'
//version = '0.0.1-SNAPSHOT'
version = ''
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude module: 'spring-boot-starter-tomcat'
	}
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-undertow'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// implementation 'com.amazonaws.serverless:aws-serverless-java-container-spring:1.9.3'
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.0-M2'
	implementation 'software.amazon.awssdk:url-connection-client:2.21.29'
	
	// implementation 'io.symphonia:lambda-logging:1.0.1'

	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	implementation 'software.amazon.awssdk:dynamodb-enhanced:2.20.99'
	implementation 'software.amazon.awssdk:auth:2.20.99'
	implementation 'software.amazon.awssdk:sts:2.20.99'
	implementation 'software.amazon.awssdk:sqs:2.20.99'
	implementation 'software.amazon.awssdk:s3:2.20.99'

	implementation 'com.google.guava:guava:32.1.3-jre'

	implementation 'com.github.f4b6a3:ulid-creator:5.2.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildZip(type: Zip) {
  from compileJava
  from processResources
  into('lib') {
    from(configurations.compileClasspath) {
      exclude 'tomcat-embed-*'
    }
  }
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}